{
  "_args": [
    [
      {
        "raw": "moniker@https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
        "scope": null,
        "escapedName": "moniker",
        "name": "moniker",
        "rawSpec": "https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
        "spec": "https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
        "type": "remote"
      },
      "/Users/travis/build/openframeworks/openFrameworks/apps/projectGenerator/frontend"
    ]
  ],
  "_from": "moniker@>=0.1.2 <0.2.0",
  "_id": "moniker@0.1.2",
  "_inCache": true,
  "_location": "/moniker",
  "_phantomChildren": {},
  "_requested": {
    "raw": "moniker@https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
    "scope": null,
    "escapedName": "moniker",
    "name": "moniker",
    "rawSpec": "https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
    "spec": "https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
  "_shasum": "872dfba575dcea8fa04a5135b13d5f24beccc97e",
  "_shrinkwrap": null,
  "_spec": "moniker@https://registry.npmjs.org/moniker/-/moniker-0.1.2.tgz",
  "_where": "/Users/travis/build/openframeworks/openFrameworks/apps/projectGenerator/frontend",
  "author": {
    "name": "Ben Weaver",
    "email": "ben@orangesoda.net"
  },
  "dependencies": {},
  "description": "Generate random names.",
  "devDependencies": {},
  "main": "./lib/moniker",
  "name": "moniker",
  "optionalDependencies": {},
  "readme": "# Moniker #\n\nA random name generator for Node.js.\n\n## Synopsis ##\n\nMoniker provides a default adjective/noun generator. Use it like this:\n\n    var Moniker = require('moniker');\n    console.log(Moniker.choose());\n    // Example output: murky-hands\n\nYou can also make a custom generator. Generators create random names\nusing dictionaries. Moniker has built-in `noun`, `verb`, and\n`adjective` dictionaries, or you can add your own.\n\n    var Moniker = require('moniker');\n    var names = Moniker.generator([Moniker.adjective, Moniker.noun]);\n    console.log(names.choose());\n\n## Installation ##\n\nInstall Moniker using NPM:\n\n    npm install moniker\n\n## API ##\n\n### Generators ###\n\n**generator(dictionaries, options)**\n\nCreate a new `Generator`. When a new name is generated, a word is\nchosen from each item in `dictionaries` in order.\n\nEach dictionary may be a `Dictionary` instance, a string path to a\nfile of words separated by spaces or newlines, or a function that\nshould return a `Dictionary` when called.\n\nThe `options` are optional and are passed along to the new\n`Generator` and any new `Dictionary`. They default to:\n\n    {\n      maxSize: undefined,\n      encoding: 'utf-8',\n      glue: '-'\n    }\n\n**Generator(options)**\n\nA name generator. Be sure to `.use()` some dictionaries\nafterward. Options may include:\n\n    {\n      glue: '-'\n    }\n\n**generator.use(dictionary, options)**\n\nAdd a new dictionary to this generator. When a new name is generated,\na word is chosen from each dictionary in order.\n\nThe `dictionary` may be a `Dictionary` instance, a string path to a\nfile of words separated by spaces or newlines, or a function that\nshould return a `Dictionary` when called. The `options` are passed\nalong to each newly-constructed `Dictionary`.\n\n**generator.choose()**\n\nCreate a new name.\n\n### Dictionaries ###\n\n**adjective(options)**\n\nCreate a `Dictionary` of using the builtin adjectives list.\n\n**noun(options)**\n\nCreate a `Dictionary` of using the builtin noun list.\n\n**verb(options)**\n\nCreate a `Dictionary` of using the builtin verb list.\n\n**read(path, options)**\n\nCreate a `Dictionary` by reading words from a file. The file should be\na list of words separated by spaces or newlines.\n\n**Dictionary()**\n\nA dictionary is a list of words.\n\n**dict.read(path, options)**\n\nLoad words from `path` into this dictionary. Options default to:\n\n    {\n      maxSize: undefined,\n      encoding: 'utf-8',\n    }\n\nWords larger than `maxSize` are ignored.\n\n**dict.choose()**\n\nReturn a random word from this dictionary.\n\n\n\n",
  "readmeFilename": "README.md",
  "version": "0.1.2"
}
