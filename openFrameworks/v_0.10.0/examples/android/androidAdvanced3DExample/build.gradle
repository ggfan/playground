import java.awt.Dimension

def ofRoot(){ return '../../../' }

// Load common functions
apply from: ofRoot()+"libs/openFrameworksCompiled/project/android/common-functions.gradle"

buildscript {
    apply from: "../../../libs/openFrameworksCompiled/project/android/ndk-verify.gradle"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion  27

    defaultConfig {
        minSdkVersion    19
        targetSdkVersion 25
        versionCode      1
        versionName     "1.0"
        ndk {
            abiFilters 'armeabi-v7a'
        }
        externalNativeBuild.cmake {
            arguments '-DANDROID_TOOLCHAIN=clang',
                      '-DANDROID_STL=c++_static'
        }
    }

    externalNativeBuild.cmake {
        path 'src/CMakeLists.txt'
    } //        moduleName = ofAppModuleName()

    sourceSets.main {
            manifest.srcFile "./AndroidManifest.xml"
            res.srcDirs  = ["res"]
            java.srcDirs = ["srcJava"]
            aidl.srcDirs = ['srcJava']
            renderscript.srcDirs = ['srcJava']
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['bin/data'] + addonData(ofRoot())
    }

    lintOptions {
        abortOnError  = false
    }

    buildTypes {
        release {
            minifyEnabled = false
        }
    }
}


dependencies {
    addonJavaDependencies(ofRoot()).each { dep ->
        implementation (project(path: dep[1] ))
    }
    implementation project(path: ':ofAndroidLib')
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-v4:27.1.0'
    }
}
